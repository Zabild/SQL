--Show the list of customers' full names, customer ID, and country who are not from the US.
SELECT FirstName,LastName, CustomerId, Country 
FROM customers 
WHERE Country <> 'USA';

--Show only the customers' full names, customer ID, and country who are from Brazil.
SELECT FirstName,LastName,CustomerID,Country
FROM customers
WHERE country = 'Brazil';
--What is the total number of tracks in the database?
SELECT COUNT(*) AS 'Total Tracks'
FROM tracks; 

--Show the top 10 most purchased tracks, including the track name, artist name, and total number of times it was purchased.
SELECT tracks.Name, artists.name, COUNT(*) AS 'total_purchases'
FROM tracks
JOIN invoice_Items ON tracks.TrackId = invoice_items.trackid
JOIN invoices ON invoice_items.InvoiceId = invoices.invoiceid
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN albums ON tracks.AlbumId = albums.AlbumId
JOIN artists ON albums.ArtistId = artists.ArtistId
GROUP BY tracks.TrackId
ORDER BY COUNT(*) DESC
LIMIT 10;

--What is the total revenue generated by each genre? Show the genre name and its total revenue in descending order.
SELECT genres.Name, SUM(invoice_items.UnitPrice * invoice_items.Quantity) AS 'Total Revenue'
FROM genres
JOIN tracks ON genres.GenreId = tracks.GenreId
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
GROUP BY genres.GenreId
ORDER BY SUM(invoice_items.UnitPrice * invoice_items.Quantity) DESC;

--Show the top 5 countries with the most customers, including the country name and the number of customers from that country.
SELECT country, COUNT(country) AS 'Total Customers'
FROM customers
GROUP BY country
ORDER BY COUNT(country) DESC
LIMIT 5;
--What is the total number of unique albums in the database?
SELECT COUNT(DISTINCT albumid) AS 'Unique Albums'
FROM albums;

--Show the names of all artists who have more than 5 albums in the database.
SELECT Name, COUNT(*) AS 'Number of Albums'
FROM artists
JOIN albums ON artists.ArtistId = albums.ArtistId
GROUP BY artists.ArtistId
HAVING COUNT(*) > 5;

--What is the average length of a track in seconds? Round to the nearest whole number.
SELECT ROUND(AVG(milliseconds)/1000) AS AVGTrackLengthSeconds
FROM tracks;

--Show the top 5 customers who have spent the most money in total, including their full name and the total amount spent.
SELECT c.firstname, c.lastname, invoices.Total
FROM customers c
JOIN invoices ON c.CustomerId = invoices.CustomerId
GROUP BY c.customerid
LIMIT 5;

--Show the top 10 playlists with the most unique tracks, including the playlist name and the number of unique tracks in the playlist.
SELECT p.name, count(DISTINCT pt.trackid) AS 'Number of Unique Tracks'
FROM playlists p
JOIN playlist_track pt ON p.playlistid = pt.playlistid
GROUP BY p.playlistid
ORDER BY  count(DISTINCT pt.trackid) DESC
LIMIT 10;

--Show the names of all tracks that have been purchased more than 1 time, including the track name and the number of times it was purchased.
SELECT Name, COUNT(*) AS 'TimesPurchased'
FROM Tracks T
JOIN invoice_items I ON T.trackid = I.trackid
GROUP BY T.trackid
HAVING COUNT(*) > 1;
